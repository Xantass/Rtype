Table of Contents

    1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .
    2.  Basic structures  . . . . . . . . . . . . . . . . . . . . . .
      2.1.  Packet header . . . . . . . . . . . . . . . . . . . . . .
    3.  Protocol packets definition . . . . . . . . . . . . . . . . .
      3.1.  Response packet . . . . . . . . . . . . . . . . . . . . .
      3.2.  Connect packet  . . . . . . . . . . . . . . . . . . . . .
      3.3. 	Parameters packet   . . . . . . . . . . . . . . . . . . .
      3.4.  Action packet   . . . . . . . . . . . . . . . . . . . . .
      3.5.  Position packet . . . . . . . . . . . . . . . . . . . . .
      3.6.  Ping packet   . . . . . . . . . . . . . . . . . . . . . .
      3.7.  Pong packet   . . . . . . . . . . . . . . . . . . . . . .
      3.8.  Disconnect packet . . . . . . . . . . . . . . . . . . . .
      3.9.  Create room packet . . . . . . . . . . . . . . . . . . .
      3.10.  Sprite packet . . . . . . . . . . . . . . . . . . .
      
 
1.  Introduction

    This document describe the network protocol used in the ECS.

    This protocol version is 1.


2.  Basic structures

    This section will define some basic structures used by the network
    protocol.

    All size are in octet.

    uintX_t is a unsigned integer of X bit

2.1.  Packet header

    This structure is present before any packet described in this
    protocol.

    Each packet MUST be assigned to an opcode, as defined in each packet
    description sections.

    The maximum size of the data MUST be 500 bytes.

    +-----------+----------+---------------------------+
    | Name      | type     | Description               |
    +-----------+----------+---------------------------+
    | opcode    | uint8_t  | Opcode                    |
    | size      | uint8_t  | Size of data              |
    | timeStamp | uint16_t  | time  when packet send   |
    | id        | uint8_t  | ID of the client          |
    +-----------+----------+---------------------------+

      Table 1: Packet header structure

    * opcode : It's identify what is the packet type

    * size : It's the number of argument after header.

    * timeStamp : It's the signature of the packet.

    * id : Only for client packet when send to server.

3.  Protocol packets definition

3.1.  Response packet

    The "Response" packet is used in response of any packet, containing the
    result of the operations.

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | opcode | 0     |
    | size   | 1     |
    +--------+-------+

      Table 2: Result packet header structure

    +-------+---------+--------------+
    | Name  | type    | Description  |
    +-------+---------+--------------+
    | error | uint8_t | Error code   |
    +-------+---------+--------------+

      Table 3: Result packet data structure

    +------------+---------------------------------------+
    | Error code | Description                           |
    +------------+---------------------------------------+
    | 0          | No error                              |
    | 1          | Ignored                               |
    | 2          | Unknown error                         |
    | 3          | Client already started                |
    | 4          | Client already stopped                |
    | 5          | Connect fail                          |
    | 6          | Start fail                            |
    | 7          | Create room fail                      |
    | 8          | Stop send packet                      |
    | 9          | Failed move                           |
    | 10         | Permission denied                     |
    +------------+---------------------------------------+
  
      Table 4: error code definition

3.2.  Connect packet

    The "Connect" packet is used by a client to connect to a server.

    If the server has enough information to identify the client, he accept
    the connection.

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | opcode | 1     |
    | size   | 1     |
    +--------+-------+

      Table 5: Connect packet header structure

3.3.  Parameters packet

    The "Parameters" packet is used to send the parameters of the client
    game.

    Each client must send it to begin a game.

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | Opcode | 2     |
    | size   | 2     |
    +--------+-------+

      Table 6: Parameters packet header structure

    +--------------------+------------+----------------------------------+
    | Name               | Data type  | Description                      |
    +--------------------+------------+----------------------------------+
    | NbPlayer           | uint8_t    | the number of player in game     |
    | SpriteBullet       | uint8_t    | Sprite bullet in game            |
    | SpriteEnnemy       | uint8_t    | Sprite Ennemy in game            |
    | SpriteEnnemyTwo    | uint8_t    | Sprite EnnemyTwo in game         |
    | SpriteEnnemyElite  | uint8_t    | Sprite EnnemyElite in game       |
    | SpriteEnnemyBoss   | uint8_t    | Sprite EnnemyBoss in game        |
    | SpriteEnnemyBullet | uint8_t    | Sprite EnnemyBullet in game      |
    +--------------------+------------+----------------------------------+

      Table 7: the parameters packet data structure

3.4.  Action packet

    The "Action" packet is used to send the action of the client

    Each client must send each time an action is done.

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | Opcode | 3     |
    | size   | 2     |
    +--------+-------+

      Table 8: Action packet header structure

    +-------------+---------------------------------------+
    | Action code | Description                           |
    +-------------+---------------------------------------+
    | 8           | Ready                                 |
    | 9           | Start Game                            |
    | 10          | Player Shoot                          |
    | 11          | Move Player                           |
    | 12          | Destroy entitie                       |
    | 13          | Create entitie                        |
    | 15          | Send Message                          |
    +-------------+---------------------------------------+

      Table 9: Action code definition

3.5.  Position packet

    The "Position" packet is used to send the position of each sprite which has moved.

    Each position is composed of the name of the sprite, its position and its size.

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | Opcode | 4     |
    | size   | 12    |
    +--------+-------+

      Table 10: Position packet header structure

    +-------------+------------+-------------------------------+
    | Name        | Data type  | Description                   |
    +-------------+------------+-------------------------------+
    | pos_x       | uint16_t   | the x position of the entity  |
    | pos_y       | uint16_t   | the y position of the entity  |
    | vel_x       | uint16_t   | the x vel of the entity       |
    | vel_y       | uint16_t   | the y vel of the entity       |
    | hitbox_x    | uint16_t   | the x hitbox of the entity    |
    | hitbox_y    | uint16_t   | the y hitbox of the entity    |
    | hitbox_type | uint16_t   | the type hitbox of the entity |
    | heal_max    | uint8_t    | the heal max of the entity    |
    | heal_cur    | uint8_t    | the heal cur of the entity    |
    | sprite      | uint8_t    | the index sprite              |
    +-------------+------------+-------------------------------+

      Table 11: the Positon packet data structure

3.6.  Ping packet

    When a "Ping" packet is sent, a "Pong" packet MUST be sent back to
    the sender.

    This packet is used to check if the other end of the connection is
    able to process packets or not.

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | Opcode | 5     |
    | size   | 0     |
    +--------+-------+

      Table 12: Ping packet header structure

3.7.  Pong packet

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | Opcode | 6     |
    | size   | 0     |
    | id     | ?     |
    +--------+-------+

      Table 13: Pong packet header structure

3.8.  Disconnect packet

    The "Disconnect" packet is used by a client to disconnect to a server.

    This packet must be send if a client want to disconnect from server.

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | opcode | 7     |
    | size   | 0     |
    +--------+-------+

      Table 14: Disconnect packet header structure

3.9.  Create room packet

    The "Create room" packet is used by server to create to all client.

    This packet must be send if a client want to create room.

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | opcode | 14    |
    | size   | 0     |
    +--------+-------+

      Table 15: Create room packet header structure

3.10. Sprite packet

    The "Sprite" packet is used by a client to load a sprite.

    This packet must be send if a client to load is own sprite.

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | opcode | 16    |
    | size   | 0     |
    +--------+-------+

      Table 16: Create room packet header structure